svg > .Viewport {
  filter: url(#InvertFilter);
}

.Viewport.textContent {
  fill: #b0b0b0;
}

.Edge > path.Edge {
  stroke-width: 1.1px;
}

.Viewport > .DataNode,
.Group > .DataNode,
.Group > .Group.Icon {
  filter: url(#InvertFilter);
  /*stroke-miterlimit: 1;*/
  /*filter: drop-shadow( 5px 5px 5px red );*/
  /*filter: drop-shadow(16px 16px 20px black);*/
  /* Same syntax as box-shadow */
  /*
  filter: drop-shadow( 2px 2px 2px #000 );
  -webkit-filter: drop-shadow( 2px 2px 2px #000 );
  */
}

.GroupGroup {
  fill: transparent;
  stroke-width: 0px;
}

.GroupComplex > .Icon {
  fill: #B4B464;
  fill-opacity: 0.1;
  stroke: #808080;
}

.GroupNone > .Icon {
		fill: #B4B464;
		fill-opacity: 0.1;
    stroke: #808080;	
}

.GroupPathway > .Icon {
  fill: #008000;
  fill-opacity: 0.05;
  stroke: #808080;
}

rect.DataNode.Icon {
  stroke-width: 0px;
}
rect.DataNode.Icon {
  rx: 15px;
  ry: 15px;
  /* clip-path needed b/c rx,ry don't work in FF */
  clip-path: url(#RoundedRectangleClipPath);
}
.DataNode .textContent {
  font-weight: bold;
}
.DataNode:hover {
  cursor: text;
}

.DataNode.GeneProduct.Icon {
  fill: #f4d03f;
}
.DataNode.GeneProduct .textContent {
  fill: #333;
}

.DataNode.Protein.Icon {
  fill: brown;
}
.DataNode.Protein .textContent {
  fill: #FEFEFE;
}

.DataNode.Rna.Icon {
  fill: #9453A7;
}
.DataNode.Rna .textContent {
  fill: #ECF0F1;
}

.DataNode.Pathway.Icon {
  fill: #75C95C;
  /* NOTE: Uncomment the line below to see an example
   *      of adding a dropshadow to Pathway DataNodes: */
  /*filter: 'drop-shadow( 2px 2px 2px #000 )'; */
}
.DataNode.Pathway .textContent {
  fill: #1C2833;
}

.DataNode.Metabolite.Icon {
  fill: #0000EE;
}
.DataNode.Metabolite .textContent {
  fill: #FEFEFE;
}

[typeof~="hmdb:HMDB00042"].DataNode.Metabolite:hover,
[typeof~="hmdb:HMDB00097"].DataNode.Metabolite:hover,
[typeof~="hmdb:HMDB00243"].DataNode.Metabolite:hover,
[typeof~="hmdb:HMDB01206"].DataNode.Metabolite:hover,
[name="acetyl-CoA"].DataNode.Metabolite:hover {
  filter: none;
}

[typeof~="hmdb:HMDB00243"].DataNode.Metabolite:hover rect.Icon,
[typeof~="hmdb:HMDB01206"].DataNode.Metabolite:hover rect.Icon,
[name="acetyl-CoA"].DataNode.Metabolite:hover rect.Icon {
  cursor: default;
  /* needed for FF. See
     https://bugzilla.mozilla.org/show_bug.cgi?id=1209061 */
  transform-box:fill-box;
  transform-origin: 50% 50%;
}

[typeof~="hmdb:HMDB00042"].DataNode.Metabolite:hover .textContent,
[typeof~="hmdb:HMDB00097"].DataNode.Metabolite:hover .textContent,
[typeof~="hmdb:HMDB00243"].DataNode.Metabolite:hover .textContent,
[name="acetyl-CoA"].DataNode.Metabolite:hover .textContent {
  font-size: 0px;
}

[typeof~="hmdb:HMDB00042"].DataNode.Metabolite:hover rect.Icon {
  cursor: default;
  filter: url(#HMDB00042Filter);
  height: 50px;
  transform: translateX(20px);
}

[typeof~="hmdb:HMDB00097"].DataNode.Metabolite:hover rect.Icon {
  cursor: default;
  filter: url(#HMDB00097Filter);
  height: 24px;
}

[typeof~="hmdb:HMDB00243"].DataNode.Metabolite:hover rect.Icon {
  fill: url(#HMDB00243Pattern);
  transform: scale(2.5, 2.5);
}

[typeof~="hmdb:HMDB01206"].DataNode.Metabolite:hover rect.Icon,
[name="acetyl-CoA"].DataNode.Metabolite:hover rect.Icon {
  fill: url(#HMDB01206Pattern);
  transform: scale(2.5, 2.5);
}

/*
.Edge > path[marker-end*="arrow"].Edge {
  filter: url(#ToPinkFilter);
}

.Edge > path[marker-end*="catalysis"].Edge {
  filter: url(#ToPinkFilter);
  color: white;
  stroke: white;
}
*/

/*
.Inhibition {
  color:  red;
  stroke: red;
  stroke-width: 1.3;
}
*/

/*
.Edge > path.Edge {
  color:  #fefefa;
  stroke: #fefefa;
  stroke-width: 1.3px;
}

g.Edge {
  width: 100%;
  height: auto;
  -moz-filter: invert(100%);
  -webkit-filter: invert(100%);
  -ms-filter: invert(100%);
  filter: invert(100%);
}
*/

.Citation .Icon {
  fill: none;
  stroke-width: 0px;
}
.Citation .textContent {
  fill: gray;
  font-size: 10px;
}

/* stuff that should maybe go into Kaavio */
/*
.textContent {
  stroke: none;
}
*/

/* this is what should work per the spec
stroke-dasharray: none; */
/* but I need to add this to make it work in Safari */
/*
marker {
  stroke-dasharray: 9999999999999999999999999;
}
*/

/* stuff to get rid of */
/*
marker [stroke="#000"],[stroke="#000000"],[stroke="black"] {
  stroke: white;
}
marker [fill="#000"],[fill="#000000"],[fill="black"] {
  fill: white;
}

marker [stroke="#FFF"],[stroke="#FFFFFF"],[stroke="#fff"],[stroke="#ffffff"],[stroke="white"] {
  stroke: black;
}
marker [fill="#FFF"],[fill="#FFFFFF"],[fill="#fff"],[fill="#ffffff"],[fill="white"] {
  fill: black;
}
*/

/*
.DataNode:hover .textContent {
  fill: yellow;
}
*/
/*
.DataNode .Highlighted {
  opacity: 0.9;
  stroke-width: 0px;
}
*/

/*
.Viewport.Icon {
  color: white;
  fill: white;
  fill-opacity: 0;
}
*/

/*
.Icon.ArcPathVisio {fill: currentColor; stroke: none;}
.Icon.Brace {fill: currentColor; stroke: none;}
.Icon.Ellipse {fill: currentColor; stroke: none;}
.Icon.EndoplasmicReticulum {fill: currentColor; stroke: none;}
.Icon.GolgiApparatus {fill: currentColor; stroke: none;}
.Icon.HexagonPathVisio {fill: currentColor; stroke: none;}
.Icon.MimDegradation {fill: currentColor; stroke: none;}
.Icon.Mitochondria {fill: currentColor; stroke: none;}
.Icon.Octagon {fill: currentColor; stroke: none;}
.Icon.Pentagon {fill: currentColor; stroke: none;}
.Icon.Rectangle {fill: currentColor; stroke: none;}
.Icon.RoundedRectangle {fill: currentColor; stroke: none;}
.Icon.SarcoplasmicReticulum {fill: currentColor; stroke: none;}
.Icon.TrianglePathVisio {fill: currentColor; stroke: none;}
.Icon.none {fill: currentColor; stroke: none;}
*/

/*
.GroupGroup {
  fill: transparent;
  stroke-width: 0px;
}

.GroupComplex > .Icon {
  fill: #B4B464;
  fill-opacity: 0.1;
  stroke: #808080;
}

.GroupNone > .Icon {
		fill: #B4B464;
		fill-opacity: 0.1;
    stroke: #808080;	
}

.GroupPathway > .Icon {
  fill: #008000;
  fill-opacity: 0.05;
  stroke: #808080;
}
*/
  /*
.CellularComponent .Icon {
  clip-path: none;
  fill: transparent;
  stroke: #808080;
  stroke-width: 3;
}
*/
