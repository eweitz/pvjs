<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!-- 
  This file serves as our template for standardized GPML pathway visual representations.
  This file can be used for many purposes outside of pathvisio.js, including allowing
  other projects to work better with GPML. For purposes of pathvisio.js, this file will
  be the starting point for our JavaScript rendering of pathways. Every time we want to
  render a GPML file on the browser, we will read a copy of this file into D3.js and
  modify the copy by adding "use" statements, cloning markers, etc. in order to create
  the desired pathway illustration in SVG.

  The XML declaration above is taken from an example from the W3C 
  <http://www.w3.org/TR/SVG/images/struct/use04.svg>,
  except I added:
  encoding="UTF-8" 
  We will want to change standalone to yes if we keep the CSS and
  JS all inside this document.
  
  Doctypes are not needed for SVG, and jwatt discourages their use:
  https://jwatt.org/svg/authoring/.

  Style guides can be arbitrary, but for consistency of SVG markup for the pathvisio.js project,
  I suggest using JS Watt's SVG authoring advice and Google's HTML and JavaScript Guides:
  https://jwatt.org/svg/authoring/
  http://google-styleguide.googlecode.com/svn/trunk/htmlcssguide.xml
  http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml

  JS Watt's advice is referenced from MDN:
  https://developer.mozilla.org/en-US/docs/Web/SVG

  For testing, we will ensure this SVG file renders correctly with the following browsers and graphics programs:
  Chrome (latest release)
    Uses Skia graphics library
  Firefox (latest release)
    Uses Azure graphics library
  Safari (latest release)
  Android Browser (latest release)
  iOS Browser (latest release)
  Internet Explorer (IE9 and subsequent versions)
  Squiggle SVG browser (latest release)
    Uses Batik 
    Available for download at http://xmlgraphics.apache.org/batik/download.html
  SVG-Edit (latest release)
    Version 2.6 (latest release as of 2013-07-08) available for download at 
    http://svg-edit.googlecode.com/svn/branches/2.6/editor/svg-editor.html
  Inkscape
    Uses livarot rendering engine but is in process of transitioning to Cairo
    Available for download at http://inkscape.org/

  Optional additional tests:
  SvgWeb
  Adobe Illustrator (CS6)
    Either convert SVG to PDF and import PDF into Illustrator or convert SVG to .ai (Illustrator format)
    with a converter like Uniconverter, available for download at
    http://sk1project.org/modules.php?name=Products&product=uniconvertor
    Opening this SVG directly with Illustrator does not work well.
    In the future, we could use Uniconverter on the server to make it possible to download pathway images in
    .ai (Illustrator) and .cdr (CorelDraw) formats.

  For more information on SVG, these references are helpful:
  [W3 Spec](http://www.w3.org/TR/SVG/expanded-toc.html)
  [MDN on SVG](https://developer.mozilla.org/en-US/docs/Web/SVG)
-->

<svg id="pathway-image"
  version="1.1"
  baseProfile="full"
  xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:ev="http://www.w3.org/2001/xml-events"
  width="100%"
  height="100%"
  onload="positionNodeLabel()">

  <!-- ***************************
       CSS Style Sheet
       ***************************
       
       We could move this CSS into an external style sheet. TODO Would that make maintainability easier?
       -->
 
  <style type="text/css"><![CDATA[
  svg {
    color-interpolation: auto;
    image-rendering: auto;
    shape-rendering: auto;
    vector-effect: non-scaling-stroke;
  }

  text {
    color: black;
    font-family: Sans-Serif;
    font-size: 12px;
    text-anchor: middle;
  }

  .complex {
    fill: rgb(180,180,100);
    fill-opacity: 0.098;
    stroke: gray;
    stroke-dasharray: 4,2;
    stroke-miterlimit: 1;
    stroke-width: 1px;
  }

  .complex {
    stroke-dasharray: 1;
  }

  .label {
    font-size: 12px;
    font-weight: bold;
    stroke: none;
  }

  .data-node {
    fill: white;
    fill-opacity: 1;
    stroke: black;
    stroke-dasharray: 0;
    stroke-miterlimit: 1;
    stroke-width: 1px;
  }

  .gene-product {
    stroke: black;
  }

  .gene-product text {
    fill: black;  
    stroke: none;
  }

  .metabolite {
    stroke: blue;
  }

  .metabolite text {
    color: blue;
  }

  .pathway {
    stroke: rgb(20,150,30);
  }

  .pathway text {
    color: rgb(20,150,30);
    font-size: 12px;
  }

  .shape {
    fill: white;
  }

  .solid-line {
    fill:none;
    stroke: black; 
    stroke-width: 1px; 
  }

  .dashed-line {
    fill:none;
    stroke: black; 
    stroke-dasharray: 5,3,2;
    stroke-width: 1px; 
  }

  .text-position-path {
    visibility: hidden;
  }
  ]]></style>

    <!-- TODO add styles for line types without styles.
         -->
  
  <g>
    <title>pathway defs for pathvisio.js</title>
    <desc>
    This SVG file contains all the graphical elements (markers and symbols in defs as well as
        style data) used by the program pathvisio.js, which has two components: 
    1) a viewer for transforming GPML biological pathway data into an SVG visual representation and 
    2) an editor for creating both views and models for biological pathways.
    </desc>
  </g>

  <!-- ***************************
       Embedded Scripts 
       ***************************

       We could move this code into an external script. TODO Would that make maintainability easier?
       -->
 
<!-- ECMAScript to truncate (if needed) and position text labels -->
  <script type="application/ecmascript"> <![CDATA[
		function positionNodeLabel(){
      var nodeLabels = document.getElementsByTagNameNS('http://www.w3.org/2000/svg','text');
      for (var i = 0; i < nodeLabels.length; ++i) {
        var nodeLabel = nodeLabels.item(i); // Calling nodeLabels.item(i) instead of nodeLabels[i]
        // shouldn't be necessary in JavaScript, but Batik can only use .item(i).
        var labelBbox = nodeLabel.getBBox();
        var labelText = nodeLabel.textContent;
        //this selector isn't good enough. TODO
        shapeNodeList = nodeLabel.parentNode.getElementsByTagNameNS('http://www.w3.org/2000/svg','use'); 
        if (typeof shapeNodeList.item(0) !== 'undefined' && shapeNodeList.item(0) !== null) {
          var shape = nodeLabel.parentNode.getElementsByTagNameNS('http://www.w3.org/2000/svg','use').item(0);
          var shapeBbox = shape.getBBox();

          // truncate label, if needed
          if ( shapeBbox['width'] < labelBbox['width'] ) {
            labelText = labelText.substring(0, labelText.length - 4);
            nodeLabel.textContent = labelText + "...";
            labelBbox = nodeLabel.getBBox();
            while ( shapeBbox['width'] < labelBbox['width'] ) {
              labelText = labelText.substring(0, labelText.length - 1);
              nodeLabel.textContent = labelText + "...";
              labelBbox = nodeLabel.getBBox();
            };

            // reposition label after making it narrow from truncation. I think this can be removed now
            // that we are using text-anchor="middle". TODO test this SVG in other SVG renderers.
            // It works without this repositioning code in Chrome and Squiggle (Batik).
            /*
            var labelxtransform = -1*(labelBbox["x"]) + shapeBbox['width']/2 - labelBbox["width"]/2;
            var labelytransform = -1*(labelBbox["y"]) + shapeBbox["height"]/2 - labelBbox["height"]/2;
            nodeLabels.setAttribute("transform", "translate(" + labelxtransform + "," + labelytransform + ")");
            */
          };
        };
      };
		};
    
  ]]> </script>

  <defs>

  <!-- ***************************
       Markers (Arrowheads) 
       *************************** -->

    <!-- Here we generate a set of interaction markers for the default color (black). If we need other colors,
         we need to clone the black marker and set the color for the clone to the desired color using d3.js.
        I wish fill="currentColor" worked for markers, but that does not appear to be the case. -->

  <!-- arrow markers -->

    <marker id="arrow-start-black" 
      fill="black"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="0 -6 12 12">
      <path d="M0,0 L10,-5 L10,5 Z" stroke-width="1px"/>
    </marker>

    <marker id="arrow-end-black"
      fill="black"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-12 -6 12 12">
      <path d="M0,0 L-10,-5 L-10,5 Z" stroke-width="1px"/>
    </marker>

  <!-- t-bar markers are incorrect -->

    <marker id="t-bar-start-black"
      fill="white"
      markerWidth="10" markerHeight="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="0 -6 12 12">
      <path d="M0,0 L10,0" stroke-width="2px" stroke="white"/>
      <path d="M10,-10 L10,10" stroke-width="2px"/>
    </marker>

    <marker id="t-bar-end-black"
      fill="white"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-12 -6 12 12">
      <path d="M0,0 L-10,0" stroke-width="2px" stroke="white"/>
      <path d="M-10,-10 L-10,10" stroke-width="2px"/>
    </marker>

  <!-- mim-binding markers -->

     <marker id="mim-binding-start-black" 
      fill="black"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="0 -6 12 12">
      <path d="M0,0 L10,-5 L10,5 Z" stroke-width="1px"/>
    </marker>

    <marker id="mim-binding-end-black"
      fill="black"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-12 -6 12 12">
      <path d="M0,0 L-10,-5 L-10,5 Z" stroke-width="1px"/>
    </marker>

  <!-- mim-catalysis markers -->

    <marker id="mim-catalysis-start-black"
      fill="white"
      markerHeight="10"
      markerWidth="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-1 -6 12 12">
      <circle cx="5" cy="0" r="5px" stroke-width="1px"/>
    </marker>

    <marker id="mim-catalysis-end-black"
      fill="white"
      markerHeight="10"
      markerUnits="strokeWidth"
      markerWidth="10"
      orient="auto"
      refX="5" refY="0"
      stroke="black"
      viewBox="-6 -6 12 12">
      <circle cx="0" cy="0" r="5px" stroke-width="1px"/>
    </marker>

    <!-- mim-cleavage markers are incorrect as circles -->

    <marker id="mim-cleavage-start-black" 
      fill="white"
      markerHeight="10"
      markerWidth="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-1 -6 12 12">
      <circle cx="5" cy="0" r="5px" stroke-width="1px"/>
    </marker>

    <marker id="mim-cleavage-end-black"
      fill="white"
      markerHeight="10"
      markerWidth="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-1 -6 12 12">
      <circle cx="5" cy="0" r="5px" stroke-width="1px"/>
    </marker>

  <!-- mim-conversion markers are incorrect -->

     <marker id="mim-conversion-start-black" 
      fill="black"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="0 -6 12 12">
      <path d="M0,0 L10,-5 L10,5 Z" stroke-width="1px"/>
    </marker>

    <marker id="mim-conversion-end-black"
      fill="black"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-12 -6 12 12">
      <path d="M0,0 L-10,-5 L-10,5 Z" stroke-width="1px"/>
    </marker>

    <!-- mim-covalent-bond markers are incorrect as circles -->

    <marker id="mim-covalent-bond-start-black" 
      fill="white"
      markerHeight="10"
      markerWidth="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-1 -6 12 12">
      <circle cx="5" cy="0" r="5px" stroke-width="1px"/>
    </marker>

    <marker id="mim-covalent-bond-end-black"
      fill="white"
      markerHeight="10"
      markerWidth="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-1 -6 12 12">
      <circle cx="5" cy="0" r="5px" stroke-width="1px"/>
    </marker>

    <!-- mim-inhibition markers are incorrect as circles -->

    <marker id="mim-inhibition-start-black" 
      fill="white"
      markerHeight="10"
      markerWidth="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-1 -6 12 12">
      <circle cx="5" cy="0" r="5px" stroke-width="1px"/>
    </marker>

    <marker id="mim-inhibition-end-black"
      fill="white"
      markerHeight="10"
      markerWidth="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-1 -6 12 12">
      <circle cx="5" cy="0" r="5px" stroke-width="1px"/>
    </marker>

  <!-- mim-modification markers are incorrect -->

     <marker id="mim-modification-start-black" 
      fill="black"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="0 -6 12 12">
      <path d="M0,0 L10,-5 L10,5 Z" stroke-width="1px"/>
    </marker>

    <marker id="mim-modification-end-black"
      fill="black"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-12 -6 12 12">
      <path d="M0,0 L-10,-5 L-10,5 Z" stroke-width="1px"/>
    </marker>

  <!-- mim-necessary-stimulation markers are incorrect -->

    <marker id="mim-necessary-stimulation-start-black"
      fill="white"
      markerWidth="10" markerHeight="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="0 -6 12 12">
      <path d="M0,0 L10,-5 L10,5 Z" stroke-width="1px"/>
    </marker>

    <marker id="mim-necessary-stimulation-end-black"
      fill="white"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-12 -6 12 12">
      <path d="M0,0 L-10,-5 L-10,5 Z" stroke-width="1px"/>
    </marker>

  <!-- mim-stimulation markers -->

    <marker id="mim-stimulation-start-black"
      fill="white"
      markerWidth="10" markerHeight="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="0 -6 12 12">
      <path d="M0,0 L10,-5 L10,5 Z" stroke-width="1px"/>
    </marker>

    <marker id="mim-stimulation-end-black"
      fill="white"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-12 -6 12 12">
      <path d="M0,0 L-10,-5 L-10,5 Z" stroke-width="1px"/>
    </marker>

  <!-- mim-transcription-translation markers are incorrect -->

    <marker id="mim-transcription-translation-start-black"
      fill="white"
      markerWidth="10" markerHeight="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="0 -6 12 12">
      <path d="M0,0 L10,-5 L10,5 Z" stroke-width="1px"/>
    </marker>

    <marker id="mim-transcription-translation-end-black"
      fill="white"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-12 -6 12 12">
      <path d="M0,0 L-10,-5 L-10,5 Z" stroke-width="1px"/>
    </marker>

  <!-- mim-gap markers are incorrect -->

    <marker id="mim-gap-start-black"
      fill="white"
      markerWidth="10" markerHeight="10"
      markerUnits="strokeWidth"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="0 -6 12 12">
      <path d="M0,0 L10,-5 L10,5 Z" stroke-width="1px"/>
    </marker>

    <marker id="mim-gap-end-black"
      fill="white"
      markerUnits="strokeWidth"
      markerWidth="10" markerHeight="10"
      orient="auto"
      refX="0" refY="0"
      stroke="black"
      viewBox="-12 -6 12 12">
      <path d="M0,0 L-10,-5 L-10,5 Z" stroke-width="1px"/>
    </marker>

  <!-- ***************************
       Symbols (shapes) 
       *************************** -->

    <!-- because of the viewbox, these symbols can be stretched to any size,
         but the stroke width will appear to increase as the symbol increases
         in height or width, ie., some SVG renderers display the E and W sides of 
         a rect transformed with "scale(2, 1)" as thicker than the N and S sides.
         I need to figure out how to correct this. Using the vector-effect attribute set to
          "non-scaling-stroke" works in Chrome, but not all renderers support this attribute.
          TODO Is there a better way to address this?
         -->

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="arc" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>arc</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="brace" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>brace</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="cell" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>cell</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

    <!-- this is the background shape for a set of data nodes in a complex -->

    <symbol id="complex" viewBox="0 0 120 180" preserveAspectRatio="none">
      <desc>Group</desc>
      <rect x="1" y="1" width="118" height="178" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="endoplasmic-reticulum" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>endoplasmic-reticulum</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="extracellular-region" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>extracellular-region</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="golgi-apparatus" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>golgi-apparatus</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

    <!-- this is the dragbox shape for any set of elements that have been grouped. this only shows up in edit mode. -->

    <symbol id="group-drag-box" viewBox="0 0 120 180" preserveAspectRatio="none">
      <desc>Group</desc>
      <rect x="1" y="1" width="118" height="178" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="hexagon" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>hexagon</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="mim-degradation" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>mim-degradation</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

    <symbol id="mitochondria" viewBox="0 0 100 65.5" preserveAspectRatio="none">
      <desc>Mitochondria</desc>
      <g opacity="0.5" vector-effect="non-scaling-stroke">
        <path
          fill="none"
          stroke="#000000"
          stroke-width="0.7492px"
          stroke-linecap="square"
          stroke-miterlimit="10"
          d="M12.868,16.743    c4.516-0.482,3.961,11.073,8.468,10.519c8.562,0.02,3.086-18.296,10.245-18.418c7.211-0.122,2.325,19.465,9.526,19.135    c7.899-0.364,0.525-21.407,8.42-21.854c7.967-0.448,3.021,20.825,10.999,20.945c6.775,0.104,3.132-17.967,9.894-17.498    c7.443,0.516,0.688,19.397,8.053,20.583c4.914,0.79,4.575-11.867,9.525-11.336c11.517,4.925,8.929,24.503-2.256,29.018    c-3.248,0.454-4.104-6.826-7.361-6.438c-5.785,0.688-4.121,14.484-9.938,14.169c-5.422-0.297-2.304-14.063-7.731-14.124    c-7.204-0.076-3.475,18.8-10.676,18.521c-6.355-0.244-1.791-16.217-8.098-17.024c-5.88-0.752-5.566,14.41-11.412,13.442    c-6.467-1.069-0.486-17.337-6.995-18.112c-3.859-0.459-2.74,9.36-6.627,9.454C2.399,43.865,0.606,21.916,12.868,16.743z"/>
      </g>
      <path
        fill="none"
        stroke="#000000"
        stroke-width="0.7492px"
        stroke-linecap="square"
        stroke-miterlimit="10"
        d="M95.753,46.125  c0,7.808-5.905,14.14-13.189,14.14H17.442c-7.284,0-13.189-6.332-13.189-14.14v-26.22c0-7.81,5.905-14.141,13.189-14.141h65.122  c7.284,0,13.189,6.331,13.189,14.141V46.125z"/>
  </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="nucleus" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>nucleus</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="organelle" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>organelle</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

   <symbol id="oval" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>Ellipse</desc>
      <ellipse cx="49" cy="24" rx="49" ry="24" vector-effect="non-scaling-stroke"></ellipse>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="pentagon" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>pentagon</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

   <symbol id="rectangle" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>Rectangle</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

    <symbol id="rounded-rectangle" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>Rounded Rectangle</desc>
      <rect x="1" y="1" rx="10" ry="10" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="sarcoplasmic-reticulum" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>sarcoplasmic-reticulum</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="triangle" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>triangle</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

  <!-- Shape is placeholder until it can be replaced with correct shape. -->

   <symbol id="vesicle" viewBox="0 0 100 50" preserveAspectRatio="none">
      <desc>vesicle</desc>
      <rect x="1" y="1" width="98" height="48" vector-effect="non-scaling-stroke"></rect>
    </symbol>

    <!-- TODO Update placeholders for SVG definitions of shapes.
         Should we add SBGN? Available as SVG here: http://www.sbgn.org/Documents/Templates 
         Not sure about adding lines. Should they be only defined in CSS?
         -->

  </defs>

  <g id="viewport">

    <!-- The visible elements below are for testing and development purposes only. These visible elements as well as
         all comments are to be removed from the production version of this file. -->

    <g id="markers" transform="translate(10 20)">

      <!-- **********************************
           Display an example of every marker 
           ********************************** -->

      <text x="60" y="0">Markers (Arrowheads)</text>

      <path id="left boundary"
        d="M10,15 L10,400"
        stroke="green"
        stroke-width="1px"
        fill="none"/>

      <path id="right boundary"
        d="M100,15 L100,400"
        stroke="red"
        stroke-width="1px"
        fill="none"/>

      <path id="path-sfe400"
        d="M10,20 L100,40"
        marker-start="url(#arrow-start-black)"
        marker-end="url(#arrow-end-black)"
        class="solid-line"/>

      <path id="path-sfe400"
        d="M10,40 L100,60"
        marker-start="url(#mim-stimulation-start-black)"
        marker-end="url(#mim-stimulation-end-black)"
        class="solid-line"/>

     <path id="path-sfe400"
        d="M10,60 L100,80"
        marker-start="url(#mim-catalysis-start-black)"
        marker-end="url(#mim-catalysis-end-black)"
        class="solid-line"/>

     <path id="path-sfe400"
        d="M10,80 L100,100"
        marker-start="url(#t-bar-start-black)"
        marker-end="url(#t-bar-end-black)"
        class="solid-line"/>

    </g>

    <g id="shapes" transform="translate(160 20)">

      <!-- *********************************
           Display an example of every shape 
           ********************************* -->

      <text x="60" y="0">Shapes</text>

      <g id="g-wbf243" transform="translate(0 20)" class="complex">
        <use id="use-wbf240" x="0" y="0" width="120" height="190" xlink:href="#complex" />

        <g id="g-wbf244" transform="translate(10 10)" class="data-node gene-product">
          <use id="use-wbf240" x="0" y="0" width="100" height="50" xlink:href="#rectangle" />
          <text x="50" y="28.6" id="text-wbf240">node in complex</text>
        </g>

        <g id="g-wbf245" transform="translate(10 70)" class="data-node gene-product">
          <use id="use-wbf240" x="0" y="0" width="100" height="50" xlink:href="#rectangle" />
          <text x="50" y="28.6" id="text-wbf240">node in complex</text>
        </g>

        <g id="g-wbf246" transform="translate(10 130)" class="data-node gene-product">
          <use id="use-wbf240" x="0" y="0" width="100" height="50" xlink:href="#rectangle" />
          <text x="50" y="28.6" id="text-wbf240">node in complex</text>
        </g>

      </g>

      <g id="g-wbf240" transform="translate(10 220)" class="data-node gene-product">
        <use id="use-wbf240" x="0" y="0" width="100" height="50" xlink:href="#rectangle" />
        <text x="50" y="28.6" id="text-wbf240">rectangle</text>
      </g>

      <g id="g-wbf241" transform="translate(10 280)" class="data-node gene-product">
        <use id="use-wbf241" x="0" y="0" width="100" height="50" xlink:href="#rounded-rectangle" />
        <text x="50" y="28.6" id="text-wbf241">rounded-rectangle</text>
      </g>

      <g id="g-wbf242" transform="translate(10 340)" class="data-node gene-product">
        <use id="use-wbf242" x="0" y="0" width="100" height="50" xlink:href="#oval" />
        <text x="50" y="28.6" id="text-wbf242">oval</text>
      </g>

      <use id="use-wbf243" x="10" y="400" width="100" height="50" xlink:href="#mitochondria" />

    </g>

    <g id="connectors" transform="translate(300 20)">

      <!-- ********************************************
           Display an example of every interaction type 
           ******************************************** -->

<!-- why does this get truncated? TODO Check script for incorrect selector. -->

      <text x="80" y="0">Edges</text>

      <g transform="translate(10 10)">

        <g id="g-abc123" transform="translate(10 10)" class="data-node gene-product">
          <use id="symbol-abc123" x="0" y="0" width="40" height="50" xlink:href="#rectangle" />
          <text id="text-abc123" x="20px" y="28.6px">gene product</text>
        </g>

        <path id="path-sfe415"
          d="M30,60 V105 H80 L80,150"
          marker-start="url(#mim-catalysis-start-black)"
          class="solid-line"/>
        <circle cx="30" cy="60" r="3px" stroke="yellow" stroke-width="1px"/>
        <circle cx="30" cy="105" r="3px" stroke="yellow" stroke-width="1px"/>
        <circle cx="80" cy="105" r="3px" stroke="yellow" stroke-width="1px"/>
        <circle cx="80" cy="150" r="3px" stroke="yellow" stroke-width="1px"/>

        <g id="g-wbf237" transform="translate(60 150)" class="data-node metabolite">
          <use id="use-wbf237" x="0" y="0" width="40px" height="40px" xlink:href="#rounded-rectangle" />
          <text id="text-wbf237" x="20px" y="23.6px">metabolite</text>
        </g>

      </g>

      <g transform="translate(90 10)">

        <g id="g-abc123" transform="translate(10 10)" class="data-node gene-product">
          <use id="symbol-abc123" x="0" y="0" width="40" height="50" xlink:href="#rectangle" />
          <text id="text-abc123" x="20px" y="28.6px">gene product</text>
        </g>

        <path id="path-sfe415"
          d="M30,60 L80,150"
          marker-start="url(#mim-catalysis-start-black)"
          class="solid-line"/>
        <circle cx="30" cy="60" r="3px" stroke="yellow" stroke-width="1px"/>
        <circle cx="80" cy="150" r="3px" stroke="yellow" stroke-width="1px"/>

        <g id="g-wbf237" transform="translate(60 150)" class="data-node metabolite">
          <use id="use-wbf237" x="0" y="0" width="40px" height="40px" xlink:href="#rounded-rectangle" />
          <text id="text-wbf237" x="20px" y="23.6px">metabolite</text>
        </g>

      </g>

      <g transform="translate(10 200)">

        <g id="g-abc123" transform="translate(10 10)" class="data-node gene-product">
          <use id="symbol-abc123" x="0" y="0" width="40" height="50" xlink:href="#rectangle" />
          <text id="text-abc123" x="20px" y="28.6px">gene product</text>
        </g>

        <path id="path-sfe415"
          d="M30,60 L25,100 L50,130 L80,150"
          marker-start="url(#mim-catalysis-start-black)"
          class="solid-line"/>
        <circle cx="30" cy="60" r="3px" stroke="yellow" stroke-width="1px"/>
        <circle cx="25" cy="100" r="3px" stroke="yellow" stroke-width="1px"/>
        <circle cx="50" cy="130" r="3px" stroke="yellow" stroke-width="1px"/>
        <circle cx="80" cy="150" r="3px" stroke="yellow" stroke-width="1px"/>

        <g id="g-wbf237" transform="translate(60 150)" class="data-node metabolite">
          <use id="use-wbf237" x="0" y="0" width="40px" height="40px" xlink:href="#rounded-rectangle" />
          <text id="text-wbf237" x="20px" y="23.6px">metabolite</text>
        </g>

      </g>

      <g transform="translate(90 200)">

        <g id="g-abc123" transform="translate(10 10)" class="data-node gene-product">
          <use id="symbol-abc123" x="0" y="0" width="40" height="50" xlink:href="#rectangle" />
          <text id="text-abc123" x="20px" y="28.6px">gene product</text>
        </g>

        <!-- We have options on how we do the curved edges.
             
             Option 1) Use cubic Bézier curve commands: Q30,65 35,100 (equivalent to
             L30,65 T35,100)? If we just used T35,100, the start-marker would appear to be in the wrong place.
             Because the circle must appear offset 5 units in the Y direction from the actual end of the line,
             we need to tell the path to use an extra L30,65, which is 5 units down in the Y direction. If the
             line were coming out of the east side of the shape, we would need to use L35,60 (adding 5 units in
             the X direction), with similar logic coming out of W and N sides. At least for circular markers,
             the second path point needs to be 5 units away from the line tangent to the outline of the shape
             at the point at which the path intersects the shape outline. What about other marker types?

              d="M30,60 Q30,65 35,100 T80,150"

                              vs.

              Option 2) Use quadratic Bézier curve commands:

              d="M30,60 C30,65 30,90 55,100 S80,130 80,150"
             
             -->

        <path id="path-sfe415"
          d="M30,60 Q30,65 35,100 T80,150"
          marker-start="url(#mim-catalysis-start-black)"
          class="solid-line"/>
        <circle cx="30" cy="60" r="3px" stroke="yellow" stroke-width="1px"/>
        <circle cx="30" cy="65" r="3px" stroke="pink" stroke-width="1px"/>
        <circle cx="35" cy="100" r="3px" stroke="yellow" stroke-width="1px"/>
        <circle cx="80" cy="150" r="3px" stroke="yellow" stroke-width="1px"/>

        <g id="g-wbf237" transform="translate(60 150)" class="data-node metabolite">
          <use id="use-wbf237" x="0" y="0" width="40px" height="40px" xlink:href="#rounded-rectangle" />
          <text id="text-wbf237" x="20px" y="23.6px">metabolite</text>
        </g>

      </g>

   </g>

    <g id="sandbox" transform="translate(600 0)">

      <!-- *******************************
           Sandbox: try out using the defs 
           ******************************* -->

      <g id="g-abc123" transform="translate(10 10)" class="data-node gene-product">

        <!-- the following path allows for positioning the text within and relative to the associated symbol.
        The path starts with x = 0 and y = symbol.height / 2.
        It ends with x = symbol.width and y = symbol.height / 2. -->

        <use id="symbol-abc123" x="0" y="0" width="300" height="100" xlink:href="#rectangle" />
        <text id="text-abc123" x="150px" y="53.6px">gene product</text>
      </g>

      <!-- the marker-start for this interaction overlaps the marker start for another. TODO What should
           happen in cases like this? -->

      <path id="path-sfe415"
        d="M165,110 V145 H500 L500,180"
        marker-start="url(#arrow-start-black)"
        marker-end="url(#mim-catalysis-end-black)"
        class="solid-line"/>

      <g id="g-wbf237" transform="translate(300 180)" class="data-node metabolite">
        <use id="use-wbf237" x="0" y="0" width="400px" height="100px" xlink:href="#rounded-rectangle" />
        <text id="text-wbf237" x="200px" y="53.6px">metabolite</text>
      </g>

      <path id="path1-sfe416"
        d="M165,110 L105,200"
        marker-start="url(#mim-catalysis-start-black)"
        marker-end="url(#mim-catalysis-end-black)"
        class="solid-line"/>

      <g id="g-wbf238" transform="translate(10 200)" class="data-node metabolite" >
        <use id="use-wbf238" x="0" y="0" width="200" height="25" xlink:href="#rectangle" />

        <!-- To position labels, we can locate the text anchor point in the vertical and horizontal center
             of the text via "text-anchor: middle" in CSS and set dy="0.3em" for each text element.
             Then we get the bounding box for each text element when it's
             created and then set it in the center of its parent shape with JavaScript:
             x = (width of shape) / 2
               = 200 /2
               = 100px
             y = (height of shape) / 2
               = 25 / 2
               = 12.5px
            Note: SVG-Edit and Inkscape ignore the dy attribute.

            Alternately, we could embed scripts into the SVG to position the label in the center of its
            parent shape:
             x = [(width of shape) - (width of text.getBBox)] / 2
               = (200 - 142.40625) / 2
               = 28.796875
             y = [(height of shape) + (height of text.getBBox)] / 2
               = (25 + 13.625) / 2
               = 19.3125

              Currently, I have the text labels being positioned with the x and y attributes. If a text label is resized
              due to truncation, the label is repositioned with the embedded script.
              The x and y attributes are set as follows:
               x = (width of shape) / 2
               y = [(height of shape) / 2] + 0.3 * (font-size)

            TODO What happens to this calculation if the font is bold?

             For existing shapes with text that overflows the width of its parent shape, we will have 
             JavaScript truncate the text so it fits. Truncation will be indicated with ellipses.
             Should we set the textLength attribute to squish the text to fit? Note that
             Inkscape and Firefox ignore the textLength attribute.
             
             For new shapes, should we set a limit on the text such that no more characters can be typed
             in if the text is longer than the parent shape? 

             Different SVG rendering engines display the same text at different widths, etc.
             We could use something like cufon to convert our fonts to paths:
             http://blog.apps.npr.org/2013/05/31/user-generated-svg.html
             https://github.com/sorccu/cufon/wiki/About
              -->

          <text id="text-wbf238" x="100px" y="16.1px">Another metabolite for the pathvisio.js SVG to render.</text>
      </g>

      <use id="use-wbf239" x="310" y="20" width="100" height="75" xlink:href="#mitochondria" />

    </g>

  </g>

</svg>
